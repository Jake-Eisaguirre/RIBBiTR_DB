---
title: "hobo_2023"
format: html
editor: source
---

## Load Packages

```{r}

if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, here, janitor, lubridate, RPostgres, rstudioapi, DBI, parsedate, stringr, hms,
                 anytime, terra, sp, rgdal, RWmisc, proj4, uuid)

```

## read in all .csv files
```{r}

# clear environment
rm(list=ls())

# slow method for reading csv files

filenames <- gsub("\\.csv$","", list.files(here("data", "hobo_2023", "all")))

for(i in filenames){
  assign(i, read_csv(here("data", "hobo_2023", "all", paste(i, ".csv", sep=""))))
}
```

## Get Site IDs
```{r}

tryCatch({
    drv <- dbDriver("Postgres")
    print("Connecting to Database…")
    connection <- dbConnect(drv, 
                 dbname = Sys.getenv("aws_dbname"),
                 host = Sys.getenv("aws_host"), 
                 port = Sys.getenv("aws_port"),
                 user = Sys.getenv("aws_user"), 
                 password = Sys.getenv("aws_password"),
                 timezone=NULL)
    print("Database Connected!")
    },
    error=function(cond) {
            print("Unable to connect to Database.")
    })

# set schema path
dbExecute(connection, "set search_path to hobo")


# add missing region: altos_de_campana

hobo_region_table <- dbGetQuery(connection, "select * from hobo_region")

mid_hobo_region <- hobo_region_table %>% 
  add_row(region = "altos_de_campana",
          time_zone = "GMT-0:200")

pan_location_id <- mid_hobo_region %>% 
  filter(region == "boraceia") %>% 
  select(hobo_location_id) %>% 
  as.character()


hobo_region <- mid_hobo_region %>% 
  mutate(hobo_region_id = if_else(region == "altos_de_campana", UUIDgenerate(), hobo_region_id),
         hobo_location_id = if_else(region == "altos_de_campana", pan_location_id, hobo_location_id)) %>% 
  filter(region == "altos_de_campana")

#dbAppendTable(connection, "hobo_region", hobo_region)



# add missing sites: cerro_negro, rabbit_stream, SouthForkEastRockCk, WestForkEastRockCk, 10109, 10055
region_table <- dbGetQuery(connection, "select region, hobo_region_id from hobo_region")

hobo_site_table <- dbGetQuery(connection, "select * from hobo_site")

cn_regid <- region_table %>% 
  filter(region == "santa_fe") %>% 
  select(hobo_region_id) %>% 
  as.character()

rs_regid <- region_table %>% 
  filter(region =="altos_de_campana") %>% 
  select(hobo_region_id) %>% 
  as.character()

ca_regid <- region_table %>% 
  filter(region == "california") %>% 
  select(hobo_region_id) %>% 
  as.character()


hobo_site <- data.frame(site = c("cerro_negro", "rabbit_stream", "SouthForkEastRockCk", "WestForkEastRockCk", "10109", "10055"),
                        site_code = NA,
                        site_comments = NA,
                        hobo_site_id = "",
                        hobo_region_id = "") %>% 
  mutate(hobo_region_id = if_else(site == "cerro_negro", cn_regid, hobo_region_id),
         hobo_region_id = if_else(site == "rabbit_stream", rs_regid, hobo_region_id),
         hobo_region_id = if_else(site %in% c("SouthForkEastRockCk", "WestForkEastRockCk", "10109", "10055"), 
                                  ca_regid, hobo_region_id))

hobo_site <- hobo_site %>% 
  mutate(hobo_site_id = UUIDgenerate(n=nrow(hobo_site)))

#dbAppendTable(connection, "hobo_site", hobo_site)

site_ids <- dbGetQuery(connection, "select site, hobo_site_id from hobo_site")

```


## Panama

### Combine both Panama files raw
```{r}

raw_comb_panama <- rbind(`Panama_combined_Aug23-Dec23`, `Panama_combined_Nov22-Aug23`) %>% 
  clean_names()
 
```

### Clean and Pivot
```{r}

clean_panama <- raw_comb_panama %>% 
  select(!c(time_zone, study_area, hobo_name)) %>% 
  rename(temperature_c = temperature,
         light_lux = intensity_lux,
         relative_humidity = rh) %>%
  mutate(height = str_replace(height, "-", "neg"),
         dew_point_c = NA,
         site = if_else(site == "AltosdePiedra", "altos_de_piedra", site),
         site = if_else(site == "Campestre", "hotel_campestre", site),
         site = if_else(site == "CerroNegro", "cerro_negro", site), # new
         site = if_else(site == "Rabbit", "rabbit_stream", site), # new
         site = if_else(site == "RioBlanco", "rio_blanco", site),
         site = if_else(site == "Tigrero", "rio_tigrero", site)) 


pan_soil <- clean_panama %>% 
  filter(location == "soil") %>%
  rename(soil_temperature_c = temperature_c,
         soil_light_lux = light_lux,
         soil_relative_humidity = relative_humidity,
         soil_dew_point_c = dew_point_c) %>% 
  mutate(row = row_number()) %>%
  pivot_wider(names_from = height, values_from = c(soil_temperature_c, soil_light_lux, soil_relative_humidity, soil_dew_point_c)) %>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols") %>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))


pan_shade <- clean_panama %>% 
  filter(location == "shade") %>% 
  rename(shade_temperature_c = temperature_c,
         shade_light_lux = light_lux,
         shade_relative_humidity = relative_humidity,
         shade_dew_point_c = dew_point_c) %>% 
  mutate(row = row_number()) %>% 
  pivot_wider(names_from = height, values_from = c(shade_temperature_c, shade_relative_humidity, shade_dew_point_c, shade_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols") %>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

pan_water <- clean_panama %>% 
  filter(location=="water") %>%
  rename(water_temperature_c = temperature_c,
         water_light_lux = light_lux,
         water_relative_humidity = relative_humidity,
         water_dew_point_c = dew_point_c) %>% 
  mutate(row = row_number()) %>%
  pivot_wider(names_from = height, values_from = c(water_temperature_c, water_relative_humidity, water_dew_point_c, water_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols") %>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

pan_sun <- clean_panama %>% 
  filter(location == "sun") %>%
  rename(sun_temperature_c = temperature_c,
         sun_light_lux = light_lux,
         sun_relative_humidity = relative_humidity,
         sun_dew_point_c = dew_point_c) %>% 
  mutate(row = row_number()) %>%
  pivot_wider(names_from = height, values_from = c(sun_temperature_c, sun_relative_humidity, sun_dew_point_c, sun_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols") %>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

pan_rg <- clean_panama %>% 
  filter(location == "raingauge") %>%
  rename(rg_temperature_c = temperature_c,
         rg_light_lux = light_lux,
         rg_relative_humidity = relative_humidity,
         rg_dew_point_c = dew_point_c) %>% 
  mutate(row = row_number()) %>%
  pivot_wider(names_from = height, values_from = c(rg_temperature_c, rg_relative_humidity, rg_dew_point_c, rg_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols") %>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

dbExecute(connection, 
          "alter table hobo
          add sun_temperature_c_100cm varchar;")

dbExecute(connection, 
          "alter table hobo
          add sun_temperature_c_5cm varchar;")

dbExecute(connection, 
          "alter table hobo
          add sun_relative_humidity_100cm varchar;")

dbExecute(connection, 
          "alter table hobo
          add sun_light_lux_5cm varchar;")

dbAppendTable(connection, 'hobo', pan_sun)

dbExecute(connection, 
          "alter table hobo
          add water_temperature_c_10cm varchar;")

dbExecute(connection, 
          "alter table hobo
          add water_temperature_c_neg10cm varchar;")

dbExecute(connection, 
          "alter table hobo
          add water_light_lux_10cm varchar;")

dbExecute(connection, 
          "alter table hobo
          add water_light_lux_neg10cm varchar;")

dbAppendTable(connection, 'hobo', pan_water)

dbAppendTable(connection, 'hobo', pan_shade)

dbAppendTable(connection, 'hobo', pan_soil)

dbExecute(connection, 
          "alter table hobo
          add rg_temperature_c_100cm varchar;")

dbExecute(connection, 
          "alter table hobo
          add rg_relative_humidity_100cm varchar;")

dbAppendTable(connection, 'hobo', pan_rg)


```


## Penn

### Raw penn
```{r}

raw_penn <- `PA_combined_May23–Jun23` %>% 
  clean_names() 

```

### Clean and Pivot
```{r}

clean_penn <- raw_penn %>% 
  select(!c(time_zone, study_area, hobo_name)) %>% 
  rename(temperature_c = temperature,
         light_lux = intensity_lux,
         relative_humidity = rh,
         dew_point_c = dew_point) %>% 
  mutate(height = str_replace(height, "-", "neg"),
         site = if_else(site == "Admin", "admin_pond", site),
         site = if_else(site == "Phelps", "phelps_pond", site),
         site = if_else(site == "RV", "rv_pond", site),
         site = if_else(site == "TW", "tryon_weber", site),
         site = if_else(site == "Vorisek", "vorisek_pond", site),
         site = if_else(site == "Wood", "wood_lab_pond", site),
         site = if_else(site == "Tuttle", "tuttle_pond", site))

penn_soil <- clean_penn %>% 
  filter(location == "soil") %>%
  rename(soil_temperature_c = temperature_c,
         soil_light_lux = light_lux,
         soil_relative_humidity = relative_humidity,
         soil_dew_point_c = dew_point_c) %>% 
  mutate(row = row_number()) %>%
  pivot_wider(names_from = height, values_from = c(soil_temperature_c, soil_light_lux, soil_relative_humidity, soil_dew_point_c)) %>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols")%>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

penn_shade <- clean_penn %>% 
  filter(location == "shade") %>% 
  rename(shade_temperature_c = temperature_c,
         shade_light_lux = light_lux,
         shade_relative_humidity = relative_humidity,
         shade_dew_point_c = dew_point_c) %>% 
  mutate(row = row_number()) %>% 
  pivot_wider(names_from = height, values_from = c(shade_temperature_c, shade_relative_humidity, shade_dew_point_c, shade_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols") %>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

penn_water <- clean_penn %>% 
  filter(location=="water") %>%
  rename(water_temperature_c = temperature_c,
         water_light_lux = light_lux,
         water_relative_humidity = relative_humidity,
         water_dew_point_c = dew_point_c) %>% 
  mutate(row = row_number()) %>%
  pivot_wider(names_from = height, values_from = c(water_temperature_c, water_relative_humidity, water_dew_point_c, water_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols") %>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

penn_sun <- clean_penn %>% 
  filter(location == "sun") %>%
  rename(sun_temperature_c = temperature_c,
         sun_light_lux = light_lux,
         sun_relative_humidity = relative_humidity,
         sun_dew_point_c = dew_point_c) %>% 
  mutate(row = row_number()) %>%
  pivot_wider(names_from = height, values_from = c(sun_temperature_c, sun_relative_humidity, sun_dew_point_c, sun_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols") %>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

dbAppendTable(connection, 'hobo', penn_sun)

dbAppendTable(connection, 'hobo', penn_water)

dbAppendTable(connection, 'hobo', penn_shade)

dbAppendTable(connection, 'hobo', penn_soil)

```


## SN

### Raw SN 
```{r}

raw_sn <- `SierraNevada_combined_Jul23-Oct23` %>% 
  clean_names()

```

### Clean and Pivot
```{r}

clean_sn <- raw_sn %>% 
  select(!c(time_zone, study_area, hobo_name)) %>% 
  rename(temperature_c = temperature,
         light_lux = intensity_lux,
         relative_humidity = rh,
         dew_point_c = dew_point) %>% 
  mutate(height = str_replace(height, "-", "neg"))

sn_soil <- clean_sn %>% 
  filter(location == "soil") %>% 
  mutate(row = row_number()) %>%
  rename(soil_temperature_c = temperature_c,
         soil_light_lux = light_lux,
         soil_relative_humidity = relative_humidity,
         soil_dew_point_c = dew_point_c) %>% 
  pivot_wider(names_from = height, values_from = c(soil_temperature_c, soil_light_lux, soil_relative_humidity, soil_dew_point_c)) %>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols")%>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

sn_shade <- clean_sn %>% 
  filter(location == "shade") %>%
  mutate(row = row_number()) %>% 
  rename(shade_temperature_c = temperature_c,
         shade_light_lux = light_lux,
         shade_relative_humidity = relative_humidity,
         shade_dew_point_c = dew_point_c) %>% 
  pivot_wider(names_from = height, values_from = c(shade_temperature_c, shade_relative_humidity, shade_dew_point_c, shade_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols")%>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

sn_water <- clean_sn %>% 
  filter(location=="water") %>% 
  mutate(row = row_number()) %>%
  rename(water_temperature_c = temperature_c,
         water_light_lux = light_lux,
         water_relative_humidity = relative_humidity,
         water_dew_point_c = dew_point_c) %>% 
  pivot_wider(names_from = height, values_from = c(water_temperature_c, water_relative_humidity, water_dew_point_c, water_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols")%>% 
  left_join(site_ids, by = c("site"))%>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

sn_sun <- clean_sn %>% 
  filter(location == "sun") %>% 
  mutate(row = row_number()) %>%
  rename(sun_temperature_c = temperature_c,
         sun_light_lux = light_lux,
         sun_relative_humidity = relative_humidity,
         sun_dew_point_c = dew_point_c) %>% 
  pivot_wider(names_from = height, values_from = c(sun_temperature_c, sun_relative_humidity, sun_dew_point_c, sun_light_lux))%>% 
  select(!c(row, location)) %>% 
  remove_empty(which = "cols")%>% 
  left_join(site_ids, by = c("site")) %>% 
  select(!c(site)) %>% 
  mutate(hobo_id = UUIDgenerate(n=n()))

dbAppendTable(connection, 'hobo', sn_sun)

dbAppendTable(connection, 'hobo', sn_water)

dbAppendTable(connection, 'hobo', sn_shade)

dbAppendTable(connection, 'hobo', sn_soil)


```

