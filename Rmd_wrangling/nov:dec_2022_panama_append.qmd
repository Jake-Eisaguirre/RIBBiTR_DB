---
title: "Nov/Dec_2022_Panama_Append"
format: html
editor: visual
---

```{r}
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, here, janitor, lubridate, RPostgres, DBI, parsedate, stringr, hms,
                 anytime, uuid)
```

## DB Connection
```{r}
tryCatch({
    drv <- dbDriver("Postgres")
    print("Connecting to Databaseâ€¦")
    connection <- dbConnect(drv,
                 dbname = Sys.getenv("aws_dbname"),
                 host = Sys.getenv("aws_host"),
                 port = Sys.getenv("aws_port"),
                 user = Sys.getenv("aws_user"),
                 password = Sys.getenv("aws_password"),
                 timezone=NULL)
    print("Database Connected!")
    },
    error=function(cond) {
            print("Unable to connect to Database.")
    })

dbExecute(connection, "set search_path to survey_data")
```


## Load all CSV file
```{r}
#| message: false

raw_survey <- read_csv(here("data", "panama_legacy", "second_half_2022", "survey_level.csv")) %>% 
  clean_names()

raw_cap_1 <- read_csv(here("data", "panama_legacy", "second_half_2022", "cap_1.csv")) %>% 
  clean_names() %>% 
  mutate(detection_type = "capture")

raw_cap_2 <- read_csv(here("data", "panama_legacy", "second_half_2022", "cap_2.csv")) %>% 
  clean_names() %>% 
  mutate(detection_type = "capture")

raw_cap <- plyr::rbind.fill(raw_cap_1, raw_cap_2)

raw_aural <- read_csv(here("data", "panama_legacy", "second_half_2022", "aural.csv")) %>% 
  clean_names() %>% 
  mutate(detection_type = "aural")

raw_visual <- read_csv(here("data", "panama_legacy", "second_half_2022", "visual.csv")) %>% 
  clean_names() %>% 
  mutate(detection_type = "visual")

raw_site_visit <- read_csv(here("data", "panama_legacy", "second_half_2022", "panama_field_3_0.csv")) %>% 
  clean_names()

```

## Combine All
### Combine 
```{r}

full_visual_data <- left_join(raw_site_visit, raw_survey, by = c("fulcrum_id" = "fulcrum_parent_id")) %>% 
  left_join(raw_visual, by = c("fulcrum_id" = "fulcrum_parent_id")) %>%
  select(!c(precipitation_other)) %>%
  unite(site, c("site", "site_other"), na.rm = T) %>% 
  unite(region, c("region", "region_other"), na.rm = T) %>% 
  mutate(site = str_to_lower(str_replace_all(site, " ", "_")),
         region = str_to_lower(str_replace_all(region, " ", "_")))

full_aural_data <- left_join(raw_site_visit, raw_survey, by = c("fulcrum_id" = "fulcrum_parent_id")) %>% 
  left_join(raw_aural, by = c("fulcrum_id" = "fulcrum_parent_id")) %>%
  select(!c(precipitation_other)) %>%
  unite(site, c("site", "site_other"), na.rm = T) %>% 
  unite(region, c("region", "region_other"), na.rm = T) %>% 
  mutate(site = str_to_lower(str_replace_all(site, " ", "_")),
         region = str_to_lower(str_replace_all(region, " ", "_")))


full_cap_data <- left_join(raw_site_visit, raw_survey, by = c("fulcrum_id" = "fulcrum_parent_id")) %>% 
  inner_join(raw_cap, by = c("fulcrum_id" = "fulcrum_parent_id")) %>%
  select(!c(precipitation_other)) %>%
  unite(site, c("site", "site_other"), na.rm = T) %>% 
  unite(region, c("region", "region_other"), na.rm = T) %>% 
  mutate(site = str_to_lower(str_replace_all(site, " ", "_")),
         region = str_to_lower(str_replace_all(region, " ", "_")))

raw_cap_tert_data <- full_cap_data %>% 
    select(date, region, site, transect, notes_site, start_date, surveytime, observers, numobs,
         starttime, end_date, endtime, surlength_time_minutes, c(varm_transect_meters:notes_survey), detection_type) %>% 
  mutate(detection_type = "capture")

raw_visual_tert_data <- full_visual_data %>% 
  select(date, region, site, transect, notes_site, start_date, surveytime, observers, numobs,
         starttime, end_date, endtime, surlength_time_minutes, c(varm_transect_meters:notes_survey), detection_type) %>% 
  mutate(detection_type = "visual")

raw_aural_tert_data <- full_aural_data %>% 
  select(date, region, site, transect, notes_site, start_date, surveytime, observers, numobs,
         starttime, end_date, endtime, surlength_time_minutes, c(varm_transect_meters:notes_survey), detection_type) %>% 
  mutate(detection_type = "aural")

raw_tert_data <- plyr::rbind.fill(raw_cap_tert_data, raw_visual_tert_data, raw_aural_tert_data)

```

### Pull out Site Table
```{r}

cur_site_list <- dbGetQuery(connection, "select s.site from site s;")

cur_region_id <- dbGetQuery(connection, "select r.region, r.region_id from region r;")

site_table <- raw_tert_data %>% 
  select(region, site, utme, utmn, elevation_m) %>% 
  group_by(site) %>% 
  mutate(temp_id = cur_group_id()) %>% 
  filter(!duplicated(temp_id)) %>% 
  select(!c(temp_id)) %>% 
  mutate(region = str_to_lower(str_replace_all(region, " ", "_")),
         site = str_to_lower(str_replace_all(site, " ", "_"))) %>% 
  anti_join(cur_site_list, by = c("site")) %>% 
  left_join(cur_region_id, by = c("region")) %>% 
  mutate(site_id = UUIDgenerate(output = c("uuid"))) %>% 
  select(!c(region))

dbAppendTable(connection, "site", site_table)


```


### Pull out Visit Table
```{r}

site_key <- dbGetQuery(connection, "select s.site, s.site_id from site s;")

visit_table <- raw_tert_data %>% 
  select(site, date, surveytime, notes_site) %>% 
  rename(survey_time = surveytime,
         visit_comments = notes_site) %>% 
  group_by(site, date, survey_time) %>% 
  mutate(temp_id = cur_group_id()) %>% 
  filter(!duplicated(temp_id)) %>% 
  select(!c(temp_id)) %>% 
  left_join(site_key, by = c("site")) %>% 
  mutate(visit_id = UUIDgenerate(output = c("uuid")))

```

### Pull out Survey Table
```{r}

visit_key <- visit_table %>% 
  select(site, date, survey_time, visit_id)

survey_table <- raw_tert_data %>% 
  select(date, site, transect, c(surveytime:surlength_time_minutes), c(pressureinhg:notes_survey), detection_type) %>% 
  select(!c(end_date)) %>% 
  mutate(pressureinhg = (0.491154*pressureinhg)) %>% 
  rename(survey_time = surveytime,
         observer = observers,
         number_observers = numobs,
         start_time = starttime,
         end_time = endtime,
         duration_minutes = surlength_time_minutes,
         pressure_psi = pressureinhg,
         relative_humidity_percent = humidity,
         wind_speed_m_s = windspeed_metersseconds,
         air_temp_c = airtemp_c,
         water_temp_c = watertemp_c,
         p_h = ph,
         percent_cloud_cover = cloudcover,
         precip = precipitation,
         survey_comments = notes_survey) %>% 
  select(!c(conductivity_s)) %>% 
  mutate(duration_minutes = if_else(duration_minutes < 0, NA, duration_minutes)) %>% 
  group_by(site, date, survey_time, detection_type) %>% 
  mutate(temp_id = cur_group_id()) %>% 
  filter(!duplicated(temp_id)) %>% 
  select(!c(temp_id)) %>% 
  left_join(visit_key, by = c("site", "date", "survey_time")) %>% 
  mutate(survey_id = UUIDgenerate(output = c("uuid")))


```

## Pull out Capture Table
```{r}

names(raw_cap) <- gsub(pattern = "capt_", replacement = "1_", x=names(raw_cap))
names(raw_cap) <- gsub(pattern = "cap_", replacement = "2_", x=names(raw_cap))

pull_apart_table <- raw_cap %>% 
  select(fulcrum_id, c("1_species":"2_buccal_swab"))

cap_1 <- pull_apart_table %>% 
  select(c(fulcrum_id:pit_tag_id_number_if_it_was_placed), detection_type) %>% 
  unite(species_capture, c("1_species", "1_species_other"), na.rm = T) %>%
  mutate(species_capture = if_else(species_capture == "", NA, species_capture)) %>% 
  drop_na(species_capture)

names(cap_1) <- gsub(pattern = "1_", replacement = "", x=names(cap_1))


cap_2 <- pull_apart_table %>% 
  select(fulcrum_id, c(detection_type:"2_buccal_swab")) %>% 
  unite(species_capture, c("2_species", "2_species_other"), na.rm = T) %>% 
  mutate(species_capture = if_else(species_capture == "", NA, species_capture)) %>% 
  drop_na(species_capture)

names(cap_2) <- gsub(pattern = "2_", replacement = "", x=names(cap_2))

capture_table <- plyr::rbind.fill(cap_1, cap_2)


```

