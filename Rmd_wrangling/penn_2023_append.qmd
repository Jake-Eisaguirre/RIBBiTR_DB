---
title: "penn_2023_append"
format: html
editor: visual
---

## Load Packages
```{r}
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, here, janitor, lubridate, RPostgres, stringr, DBI, parsedate, uuid)
```
## Load CSV Exports and Trim Fat
```{r}

survey_info <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23",
                             "1_penn_surveyinformation", "1_penn_surveyinformation.csv")) %>% 
  select(!c(2:14)) %>% 
  clean_names()

survey_acoustic <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23",
                             "2_penn_acousticsurvey", "2_penn_acousticsurvey.csv")) %>% 
  select(!c(2:14)) %>% 
  clean_names()

acoustic_obs <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23",
                             "2_penn_acousticsurvey", "2_penn_acousticsurvey_acoustic_survey.csv")) %>% 
  select(!c(4:11)) %>% 
  clean_names()


survey_edna <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23", "3_penn_ednasurvey",
                             "3_penn_ednasurvey.csv")) %>% 
  select(!c(2:14)) %>% 
  clean_names()


edna_obs_col <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23", "3_penn_ednasurvey",
                          "3_penn_ednasurvey_edna_collection.csv")) %>% 
  select(!c(4:11)) %>% 
  clean_names()


edna_obs_filt <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23",
                               "3_penn_ednasurvey",
                               "3_penn_ednasurvey_edna_collection_edna_filtering.csv")) %>% 
  select(!c(4:11)) %>% 
  clean_names()

survey_ves <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23",
                            "4_penn_visualencountersurvey", "4_penn_visualencountersurvey.csv")) %>% 
  select(!c(2:14)) %>% 
  clean_names()

ves_obs <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23",
                            "4_penn_visualencountersurvey", 
                         "4_penn_visualencountersurvey_visual_encounter_information.csv")) %>% 
  select(!c(4:11)) %>% 
  clean_names()

survey_capture <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23", 
                                "5_penn_capturesurvey", "5_penn_capturesurvey.csv")) %>% 
  select(!c(2:14)) %>% 
  clean_names()

capture_obs <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23", 
                                "5_penn_capturesurvey", 
                             "5_penn_capturesurvey_captured_amphibian_information.csv")) %>% 
  select(!c(4:12)) %>% 
  clean_names()

samp_proces <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23",
                             "6_penn_sampleprocessing",
                             "6_penn_sampleprocessing.csv")) %>% 
  select(!c(2:14)) %>% 
  clean_names()

samp_procces_obs <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23",
                             "6_penn_sampleprocessing",
                             "6_penn_sampleprocessing_amphibian_capture_survey_collections.csv"))%>% 
  select(!c(4:11)) %>% 
  clean_names()

cmr <- read_csv(here("data", "new_2023_data", "penn", "exp_06_12_23", "supp_penn_cmrids",
                     "supp_penn_cmrids.csv")) %>% 
  select(!c(2:14)) %>% 
  clean_names()

```

## DB Connection
```{r}
tryCatch({
    drv <- dbDriver("Postgres")
    print("Connecting to Databaseâ€¦")
    connection <- dbConnect(drv,
                 dbname = Sys.getenv("aws_dbname"),
                 host = Sys.getenv("aws_host"),
                 port = Sys.getenv("aws_port"),
                 user = Sys.getenv("aws_user"),
                 password = Sys.getenv("aws_password"),
                 timezone=NULL)
    print("Database Connected!")
    },
    error=function(cond) {
            print("Unable to connect to Database.")
    })

dbExecute(connection, "set search_path to survey_data")
```


## Merge unique visits include site
### Merge all 2023 visits
```{r}

comms <- survey_info %>% 
  select(site, sampling_event_comments, date)

unique_visits <- plyr::rbind.fill(survey_acoustic, survey_capture, survey_edna, survey_info, survey_ves) %>% 
  select(date, site) %>% 
  group_by(date, site) %>% 
  mutate(temp_id = cur_group_id()) %>% 
  filter(!duplicated(temp_id)) %>% 
  left_join(comms, by = c("site", "date")) %>% 
  select(!temp_id) %>% 
  rename(visit_comments = sampling_event_comments) %>% 
  mutate(site = str_to_lower(site),
         site = str_replace_all(site, "-", "_"),
         site = str_replace_all(site, " ", "_"))

```

### Pull site f.key
```{r}

s.fkey_q <- "select site, site_id
            from site;"

s.key <- dbGetQuery(connection, s.fkey_q)

```

### populate site k.key on visit table - READY
```{r}

unique_visits_fkey <- unique_visits %>% 
  inner_join(s.key, by = c("site")) %>% 
  mutate(visit_id = UUIDgenerate()) %>% 
  ungroup() %>% 
  select(!c(site))


```



